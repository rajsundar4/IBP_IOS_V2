/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: sapsopaRequestHandler.h
 Abstract: A singleton class responsible for sending the appropriate service requests (for retrieving and modifying service data) and parsing the responses into semantic objects, using the sapsopa service proxy and the SDMConnectivityHelper class. The sent requests also consider the service URL and the SAP client defined in the application settings. The class is also responsible for sending the appropriate notifications to the application delegate and view controllers, for handling the request success, failure and authentication challenge.
 
 */

#import <Foundation/Foundation.h>
#import "RequestDelegate.h"
#import "SDMHttpRequestDelegate.h"
#import "SDMConnectivityHelper.h"
#import "sapsopaServiceDeclarations.h"
#import "ServiceNegotiator.h"
#import "Authenticating.h"




#pragma mark - Notifications

//Notification UserInfo keys:
extern NSString * const kResponseItem; ///< Single item response
extern NSString * const kResponseItems; ///< Multiple items response
extern NSString * const kResponseData; ///< Raw response data
extern NSString * const kRequestedMediaLink; ///< Media link item
extern NSString * const kServerResponseError; ///< Server response error
extern NSString * const kParsingError; ///< Parsing response error
extern NSString * const kResponseParentItem; ///< Item selected in the view previous to the one triggered the request
extern NSString * const kBatchRequest; ///< BatchRequest object containing the response

//Notification keys:
extern NSString * const kAuthenticationNeededNotification; ///< Notification key for request authentication challenge.



extern NSString * const kLoadExcludecharsCompletedNotification; ///< Notification key for complete loading of excludechars items.
extern NSString * const kLoadExcludecharsTypeCompletedNotification; ///< Notification key for complete loading of a specific excludecharsType item.
extern NSString * const kCreateExcludecharsTypeCompletedNotification; ///< Notification key for complete creating a excludecharsType collection item.
extern NSString * const kUpdateExcludecharsTypeCompletedNotification; ///< Notification key for complete updating a excludecharsType collection item.
extern NSString * const kDeleteExcludecharsTypeCompletedNotification; ///< Notification key for complete deleting a excludecharsType item.

extern NSString * const kLoadReportpagedefaultCompletedNotification; ///< Notification key for complete loading of reportpagedefault items.
extern NSString * const kLoadReportpagedefaultTypeCompletedNotification; ///< Notification key for complete loading of a specific reportpagedefaultType item.
extern NSString * const kCreateReportpagedefaultTypeCompletedNotification; ///< Notification key for complete creating a reportpagedefaultType collection item.
extern NSString * const kUpdateReportpagedefaultTypeCompletedNotification; ///< Notification key for complete updating a reportpagedefaultType collection item.
extern NSString * const kDeleteReportpagedefaultTypeCompletedNotification; ///< Notification key for complete deleting a reportpagedefaultType item.

extern NSString * const kLoadReportsCompletedNotification; ///< Notification key for complete loading of reports items.
extern NSString * const kLoadReportsTypeCompletedNotification; ///< Notification key for complete loading of a specific reportsType item.
extern NSString * const kLoadReportForReportsTypeCompletedNotification; ///< Notification key for complete loading of report navigation items for a specific reportsType item.
extern NSString * const kLoadReportqueryconstraintsForReportsTypeCompletedNotification; ///< Notification key for complete loading of reportqueryconstraints navigation items for a specific reportsType item.
extern NSString * const kLoadReportviewsfilterForReportsTypeCompletedNotification; ///< Notification key for complete loading of reportviewsfilter navigation items for a specific reportsType item.
extern NSString * const kCreateReportsTypeCompletedNotification; ///< Notification key for complete creating a reportsType collection item.
extern NSString * const kUpdateReportsTypeCompletedNotification; ///< Notification key for complete updating a reportsType collection item.
extern NSString * const kDeleteReportsTypeCompletedNotification; ///< Notification key for complete deleting a reportsType item.

extern NSString * const kLoadReportpagesCompletedNotification; ///< Notification key for complete loading of reportpages items.
extern NSString * const kLoadReportpagesTypeCompletedNotification; ///< Notification key for complete loading of a specific reportpagesType item.
extern NSString * const kLoadReportpagelayoutForReportpagesTypeCompletedNotification; ///< Notification key for complete loading of reportpagelayout navigation items for a specific reportpagesType item.
extern NSString * const kLoadSharedobjectsForReportpagesTypeCompletedNotification; ///< Notification key for complete loading of sharedobjects navigation items for a specific reportpagesType item.
extern NSString * const kLoadReportpagenavForReportpagesTypeCompletedNotification; ///< Notification key for complete loading of reportpagenav navigation items for a specific reportpagesType item.
extern NSString * const kCreateReportpagesTypeCompletedNotification; ///< Notification key for complete creating a reportpagesType collection item.
extern NSString * const kUpdateReportpagesTypeCompletedNotification; ///< Notification key for complete updating a reportpagesType collection item.
extern NSString * const kDeleteReportpagesTypeCompletedNotification; ///< Notification key for complete deleting a reportpagesType item.

extern NSString * const kLoadReportviewsCompletedNotification; ///< Notification key for complete loading of reportviews items.
extern NSString * const kLoadReportviewsTypeCompletedNotification; ///< Notification key for complete loading of a specific reportviewsType item.
extern NSString * const kLoadReportviewForReportviewsTypeCompletedNotification; ///< Notification key for complete loading of reportview navigation items for a specific reportviewsType item.
extern NSString * const kLoadSharedobjectsForReportviewsTypeCompletedNotification; ///< Notification key for complete loading of sharedobjects navigation items for a specific reportviewsType item.
extern NSString * const kLoadReportviewpagesForReportviewsTypeCompletedNotification; ///< Notification key for complete loading of reportviewpages navigation items for a specific reportviewsType item.
extern NSString * const kLoadReportviewwbfavForReportviewsTypeCompletedNotification; ///< Notification key for complete loading of reportviewwbfav navigation items for a specific reportviewsType item.
extern NSString * const kCreateReportviewsTypeCompletedNotification; ///< Notification key for complete creating a reportviewsType collection item.
extern NSString * const kUpdateReportviewsTypeCompletedNotification; ///< Notification key for complete updating a reportviewsType collection item.
extern NSString * const kDeleteReportviewsTypeCompletedNotification; ///< Notification key for complete deleting a reportviewsType item.

extern NSString * const kLoadReportpagelayoutCompletedNotification; ///< Notification key for complete loading of reportpagelayout items.
extern NSString * const kLoadReportpagelayoutTypeCompletedNotification; ///< Notification key for complete loading of a specific reportpagelayoutType item.
extern NSString * const kLoadReportviewForReportpagelayoutTypeCompletedNotification; ///< Notification key for complete loading of reportview navigation items for a specific reportpagelayoutType item.
extern NSString * const kCreateReportpagelayoutTypeCompletedNotification; ///< Notification key for complete creating a reportpagelayoutType collection item.
extern NSString * const kUpdateReportpagelayoutTypeCompletedNotification; ///< Notification key for complete updating a reportpagelayoutType collection item.
extern NSString * const kDeleteReportpagelayoutTypeCompletedNotification; ///< Notification key for complete deleting a reportpagelayoutType item.

extern NSString * const kLoadReportviewCompletedNotification; ///< Notification key for complete loading of reportview items.
extern NSString * const kLoadReportviewTypeCompletedNotification; ///< Notification key for complete loading of a specific reportviewType item.
extern NSString * const kCreateReportviewTypeCompletedNotification; ///< Notification key for complete creating a reportviewType collection item.
extern NSString * const kUpdateReportviewTypeCompletedNotification; ///< Notification key for complete updating a reportviewType collection item.
extern NSString * const kDeleteReportviewTypeCompletedNotification; ///< Notification key for complete deleting a reportviewType item.

extern NSString * const kLoadReportCompletedNotification; ///< Notification key for complete loading of report items.
extern NSString * const kLoadReportTypeCompletedNotification; ///< Notification key for complete loading of a specific reportType item.
extern NSString * const kCreateReportTypeCompletedNotification; ///< Notification key for complete creating a reportType collection item.
extern NSString * const kUpdateReportTypeCompletedNotification; ///< Notification key for complete updating a reportType collection item.
extern NSString * const kDeleteReportTypeCompletedNotification; ///< Notification key for complete deleting a reportType item.

extern NSString * const kLoadReportqueryconstraintsCompletedNotification; ///< Notification key for complete loading of reportqueryconstraints items.
extern NSString * const kLoadReportqueryconstraintsTypeCompletedNotification; ///< Notification key for complete loading of a specific reportqueryconstraintsType item.
extern NSString * const kCreateReportqueryconstraintsTypeCompletedNotification; ///< Notification key for complete creating a reportqueryconstraintsType collection item.
extern NSString * const kUpdateReportqueryconstraintsTypeCompletedNotification; ///< Notification key for complete updating a reportqueryconstraintsType collection item.
extern NSString * const kDeleteReportqueryconstraintsTypeCompletedNotification; ///< Notification key for complete deleting a reportqueryconstraintsType item.

extern NSString * const kLoadReportviewsfilterCompletedNotification; ///< Notification key for complete loading of reportviewsfilter items.
extern NSString * const kLoadReportviewsfilterTypeCompletedNotification; ///< Notification key for complete loading of a specific reportviewsfilterType item.
extern NSString * const kCreateReportviewsfilterTypeCompletedNotification; ///< Notification key for complete creating a reportviewsfilterType collection item.
extern NSString * const kUpdateReportviewsfilterTypeCompletedNotification; ///< Notification key for complete updating a reportviewsfilterType collection item.
extern NSString * const kDeleteReportviewsfilterTypeCompletedNotification; ///< Notification key for complete deleting a reportviewsfilterType item.

extern NSString * const kLoadSharedobjectsCompletedNotification; ///< Notification key for complete loading of sharedobjects items.
extern NSString * const kLoadSharedobjectsTypeCompletedNotification; ///< Notification key for complete loading of a specific sharedobjectsType item.
extern NSString * const kCreateSharedobjectsTypeCompletedNotification; ///< Notification key for complete creating a sharedobjectsType collection item.
extern NSString * const kUpdateSharedobjectsTypeCompletedNotification; ///< Notification key for complete updating a sharedobjectsType collection item.
extern NSString * const kDeleteSharedobjectsTypeCompletedNotification; ///< Notification key for complete deleting a sharedobjectsType item.

extern NSString * const kLoadReportpagenavCompletedNotification; ///< Notification key for complete loading of reportpagenav items.
extern NSString * const kLoadReportpagenavTypeCompletedNotification; ///< Notification key for complete loading of a specific reportpagenavType item.
extern NSString * const kCreateReportpagenavTypeCompletedNotification; ///< Notification key for complete creating a reportpagenavType collection item.
extern NSString * const kUpdateReportpagenavTypeCompletedNotification; ///< Notification key for complete updating a reportpagenavType collection item.
extern NSString * const kDeleteReportpagenavTypeCompletedNotification; ///< Notification key for complete deleting a reportpagenavType item.

extern NSString * const kLoadReportviewpagesCompletedNotification; ///< Notification key for complete loading of reportviewpages items.
extern NSString * const kLoadReportviewpagesTypeCompletedNotification; ///< Notification key for complete loading of a specific reportviewpagesType item.
extern NSString * const kCreateReportviewpagesTypeCompletedNotification; ///< Notification key for complete creating a reportviewpagesType collection item.
extern NSString * const kUpdateReportviewpagesTypeCompletedNotification; ///< Notification key for complete updating a reportviewpagesType collection item.
extern NSString * const kDeleteReportviewpagesTypeCompletedNotification; ///< Notification key for complete deleting a reportviewpagesType item.

extern NSString * const kLoadReportviewwbfavCompletedNotification; ///< Notification key for complete loading of reportviewwbfav items.
extern NSString * const kLoadReportviewwbfavTypeCompletedNotification; ///< Notification key for complete loading of a specific reportviewwbfavType item.
extern NSString * const kCreateReportviewwbfavTypeCompletedNotification; ///< Notification key for complete creating a reportviewwbfavType collection item.
extern NSString * const kUpdateReportviewwbfavTypeCompletedNotification; ///< Notification key for complete updating a reportviewwbfavType collection item.
extern NSString * const kDeleteReportviewwbfavTypeCompletedNotification; ///< Notification key for complete deleting a reportviewwbfavType item.

















#pragma mark -

/**
 A singleton class responsible for sending the appropriate service requests (for retrieving service data needed by the application views) and parsing the responses into semantic objects, using the sapsopa service proxy and the SDMConnectivityHelper class. The sent requests also consider the service URL and the SAP client defined in the application settings. The class is also responsible for sending the appropriate notifications to the application delegate and view controllers, for handling the request success, failure and authentication challenge.
 */
@interface sapsopaRequestHandler : NSObject <RequestDelegate, SDMConnectivityHelperDelegate> {
    SDMConnectivityHelper *connectivityHelper;
    sapsopaService *service;
    NSString *deviceLanguage;
	ServiceNegotiator *serviceNegotiator;
	SecIdentityRef certificate;
	CSRFData *csrfData;
}

@property (strong, nonatomic, setter = setServiceDocumentURL:) NSString *serviceDocumentURL; ///< sapsopa service document URL (used as base URL for service requests).
@property (strong, nonatomic, setter = setBaseServerURL:) NSString *baseServerURL; ///< sapsopa service document URL (used as base URL for service requests).
@property (strong, nonatomic, setter = setSAPClient:) NSString *client; ///< SAP client (may be empty or nil for default client). 
@property (assign, nonatomic) BOOL useServiceNegotiation; ///< Indicates if the service negotiation process should be performed. This property is considered only when the useLocalMetadata property is set to NO.
@property (assign, nonatomic) BOOL useLocalMetadata; ///< Indicates if the service proxy is initialized using local metadata.
@property (assign, nonatomic) BOOL useJSON; ///< Indicates if the service calls are done using JSON or XML.
@property (strong, nonatomic, setter = setCsrfToken:) NSString *csrfToken;
@property (strong, nonatomic, setter = setXsSessionId:) NSString *xsSessionId;
/// For saving status code.
@property (nonatomic, readwrite) int responseCode;



/**
 @return sapsopaRequestHandler singleton instance.
 */
+ (sapsopaRequestHandler *)uniqueInstance;

/**
 @return BOOL indicating if service is valid.
 */
- (BOOL)isServiceValid;

#pragma mark - User Login

//- (BOOL)executeSOPLogin;
- (BOOL) executeSOPLoginWithUsername:(NSString *) aUsername andPassword:(NSString *) aPassword andReturnError:(__autoreleasing NSError **) aError;
- (BOOL) executeSOPLogoutAndReturnError:(__autoreleasing NSError **) aError;
- (NSDictionary *)loadReportJsonSyncWithReportview:(NSString *) aReportview andReturnError:(__autoreleasing NSError **) aError;
- (NSString *)getUserPlanningAreaWithUsername:(NSString *) username andReturnError:(__autoreleasing NSError **) aError;
- (NSDictionary *) getUserFavoritesWithUsername:(NSString *) aUsername andPlanArea:(NSString *) aPlanArea andReturnError:(__autoreleasing NSError **) aError;
- (BOOL) getUserSession:(NSString *) aUsername andReturnError:(__autoreleasing NSError **) aError;

/**
 Authenticates the given user name and password against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process.  If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object.
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required, make sure to set the application and SUP server values in the ConnectivitySettings class, before calling this method.
 For enabling Single Sign On (SSO):
 At the first application run pass the username and password to securely store the user credentials on the device.
 At later calls, pass empty credentials to exctract the stored user credentials. 
 @param aUsername The user name used for the authentication. If domain is required, the username should be in the format: [domain]\[user]
 @param aPassword The password for the provided user name.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithUsername:(NSString *)aUsername andPassword:(NSString *)aPassword error:(NSError * __autoreleasing *)error;

/**
 Authenticates the client certificate against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process. If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object (without service negotiation).
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required use the executeLoginWithCertificateWithPassword:andFileName:andFileExtension:error: method.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithCertificateWithError:(NSError *__autoreleasing *)error;

/**
 Authenticates the client certificate against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process. If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object (without service negotiation).
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required, make sure to set the application and SUP server values in the ConnectivitySettings class, before calling this method.
 @param aPassword Certificate password.
 @param aFileName Certificate file name.
 @param aFileExtension Certificate file extension.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithCertificateWithPassword:(NSString *)aPassword andFileName:(NSString *)aFileName andFileExtension:(NSString *)aFileExtension error:(NSError *__autoreleasing *)error;



#pragma mark - Service Negotiation

/**
 Updates the service document URL with the result of the best matching service query of the Gateway service catalog.
 Is performed as part of the login process (in the executeLoginWithUsername:andPassword method), if the useServiceNegotiation propery is YES.
 @param authenticator The implementation of Authenticating protocol according to the required authentication method.
 @param error A pointer to an NSError object.
 @return BOOL indicating if service negotiation succeeded.
 */
- (BOOL)negotiateServiceVersionAndUpdateServiceDocumentUrlUsingAuthenticator:(id <Authenticating>)authenticator error:(NSError * __autoreleasing *)error;

#pragma mark - Batch

/**
 Start a batch request which will aggregate all service calls made through the RequestHandler.
 Call the executeBatch method to execute the aggregated calls in one batch request.
 @param aNotificationName A name to post a notification to once the batch request is completed, can be nil.
 */
- (void)startBatchWithNotificationName:(NSString *)aNotificationName;

/**
 Closes a changeSet and adds requests to new changeSet (in batch request).
 */
- (void)closeExistingChangeSet;

/**
 Executes a batch request, call the startBatchWithNotificationName: before in order to initiate a batch request object.
 */
- (void)executeBatch;




#pragma mark - Excludechars methods

/**
 Load the service entity-set Excludechars items, parsed into excludecharsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadExcludecharsCompletedNotification for operation completion, along with the array of excludecharsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadExcludechars;

/**
 Load a specific excludecharsType item, parsed into excludecharsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadExcludecharsTypeCompletedNotification for operation completion, along with the excludecharsType item given as parameter (for kResponseParentItem key), and the response excludecharsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aExcludecharsType The specific item to load.
 */
- (void)loadExcludecharsType:(excludecharsType *)aExcludecharsType;

/**
 Creates a excludecharsType item and add it to the Excludechars.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateExcludecharsTypeCompletedNotification for operation completion, along with the excludecharsType item given as parameter (for kResponseParentItem key), and the response excludecharsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aExcludecharsType The specific item to create.
 */
- (void)createExcludecharsType:(excludecharsType *)aExcludecharsType;

/**
 Updates a excludecharsType item in the Excludechars.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateExcludecharsTypeCompletedNotification for operation completion, along with the excludecharsType item given as parameter (for kResponseParentItem key), and the response excludecharsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aExcludecharsType The specific item to update.
 */
- (void)updateExcludecharsType:(excludecharsType *)aExcludecharsType;

/**
 Deletes a specific excludecharsType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteExcludecharsTypeCompletedNotification for operation completion, along with the excludecharsType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aExcludecharsType The specific item to delete.
 */
- (void)deleteExcludecharsType:(excludecharsType *)aExcludecharsType;

#pragma mark - Reportpagedefault methods

/**
 Load the service entity-set Reportpagedefault items, parsed into reportpagedefaultType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagedefaultCompletedNotification for operation completion, along with the array of reportpagedefaultType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportpagedefault;

/**
 Load a specific reportpagedefaultType item, parsed into reportpagedefaultType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagedefaultTypeCompletedNotification for operation completion, along with the reportpagedefaultType item given as parameter (for kResponseParentItem key), and the response reportpagedefaultType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagedefaultType The specific item to load.
 */
- (void)loadReportpagedefaultType:(reportpagedefaultType *)aReportpagedefaultType;

/**
 Creates a reportpagedefaultType item and add it to the Reportpagedefault.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportpagedefaultTypeCompletedNotification for operation completion, along with the reportpagedefaultType item given as parameter (for kResponseParentItem key), and the response reportpagedefaultType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagedefaultType The specific item to create.
 */
- (void)createReportpagedefaultType:(reportpagedefaultType *)aReportpagedefaultType;

/**
 Updates a reportpagedefaultType item in the Reportpagedefault.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportpagedefaultTypeCompletedNotification for operation completion, along with the reportpagedefaultType item given as parameter (for kResponseParentItem key), and the response reportpagedefaultType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagedefaultType The specific item to update.
 */
- (void)updateReportpagedefaultType:(reportpagedefaultType *)aReportpagedefaultType;

/**
 Deletes a specific reportpagedefaultType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportpagedefaultTypeCompletedNotification for operation completion, along with the reportpagedefaultType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagedefaultType The specific item to delete.
 */
- (void)deleteReportpagedefaultType:(reportpagedefaultType *)aReportpagedefaultType;

#pragma mark - Reports methods

/**
 Load the service entity-set Reports items, parsed into reportsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportsCompletedNotification for operation completion, along with the array of reportsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReports;

/**
 Load a specific reportsType item, parsed into reportsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the response reportsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to load.
 */
- (void)loadReportsType:(reportsType *)aReportsType;
/**
 Load a specific reportsType item, parsed into reportsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the response reportsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to load.
 @param expand Should load the specific item with all its related items (using $expand query parameter)
 */
- (void)loadReportsType:(reportsType *)aReportsType expand:(BOOL)expand;

/**
 Load the report navigation items for a specific reportsType item, parsed into reportType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportForReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the array of the reportType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to load its report navigation items.
 */
- (void)loadReportForReportsType:(reportsType *)aReportsType;

/**
 Load the reportqueryconstraints navigation items for a specific reportsType item, parsed into reportqueryconstraintsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportqueryconstraintsForReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the array of the reportqueryconstraintsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to load its reportqueryconstraints navigation items.
 */
- (void)loadReportqueryconstraintsForReportsType:(reportsType *)aReportsType;

/**
 Load the reportviewsfilter navigation items for a specific reportsType item, parsed into reportviewsfilterType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsfilterForReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the array of the reportviewsfilterType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to load its reportviewsfilter navigation items.
 */
- (void)loadReportviewsfilterForReportsType:(reportsType *)aReportsType;

/**
 Creates a reportsType item and add it to the Reports.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the response reportsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to create.
 */
- (void)createReportsType:(reportsType *)aReportsType;

/**
 Creates a reportType item for a reportsType item (using report navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportTypeCompletedNotification for operation completion, along with the reportType item given as parameter (for kResponseParentItem key), and the response reportType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportType The specific item to create.
 @param aReportsType The item which the created item will be associated to.
 */
- (void)createReportType:(reportType *)aNewReportType forReportsType:(reportsType *)aReportsType;

/**
 Creates a reportqueryconstraintsType item for a reportsType item (using reportqueryconstraints navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportqueryconstraintsTypeCompletedNotification for operation completion, along with the reportqueryconstraintsType item given as parameter (for kResponseParentItem key), and the response reportqueryconstraintsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportqueryconstraintsType The specific item to create.
 @param aReportsType The item which the created item will be associated to.
 */
- (void)createReportqueryconstraintsType:(reportqueryconstraintsType *)aNewReportqueryconstraintsType forReportsType:(reportsType *)aReportsType;

/**
 Creates a reportviewsfilterType item for a reportsType item (using reportviewsfilter navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportviewsfilterTypeCompletedNotification for operation completion, along with the reportviewsfilterType item given as parameter (for kResponseParentItem key), and the response reportviewsfilterType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportviewsfilterType The specific item to create.
 @param aReportsType The item which the created item will be associated to.
 */
- (void)createReportviewsfilterType:(reportviewsfilterType *)aNewReportviewsfilterType forReportsType:(reportsType *)aReportsType;

/**
 Updates a reportsType item in the Reports.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key), and the response reportsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to update.
 */
- (void)updateReportsType:(reportsType *)aReportsType;

/**
 Deletes a specific reportsType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportsTypeCompletedNotification for operation completion, along with the reportsType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportsType The specific item to delete.
 */
- (void)deleteReportsType:(reportsType *)aReportsType;

#pragma mark - Reportpages methods

/**
 Load the service entity-set Reportpages items, parsed into reportpagesType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagesCompletedNotification for operation completion, along with the array of reportpagesType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportpages;

/**
 Load a specific reportpagesType item, parsed into reportpagesType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the response reportpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to load.
 */
- (void)loadReportpagesType:(reportpagesType *)aReportpagesType;
/**
 Load a specific reportpagesType item, parsed into reportpagesType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the response reportpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to load.
 @param expand Should load the specific item with all its related items (using $expand query parameter)
 */
- (void)loadReportpagesType:(reportpagesType *)aReportpagesType expand:(BOOL)expand;

/**
 Load the reportpagelayout navigation items for a specific reportpagesType item, parsed into reportpagelayoutType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagelayoutForReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the array of the reportpagelayoutType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to load its reportpagelayout navigation items.
 */
- (void)loadReportpagelayoutForReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Load the sharedobjects navigation items for a specific reportpagesType item, parsed into sharedobjectsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadSharedobjectsForReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the array of the sharedobjectsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to load its sharedobjects navigation items.
 */
- (void)loadSharedobjectsForReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Load the reportpagenav navigation items for a specific reportpagesType item, parsed into reportpagenavType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagenavForReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the array of the reportpagenavType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to load its reportpagenav navigation items.
 */
- (void)loadReportpagenavForReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Creates a reportpagesType item and add it to the Reportpages.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the response reportpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to create.
 */
- (void)createReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Creates a reportpagelayoutType item for a reportpagesType item (using reportpagelayout navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the response reportpagelayoutType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportpagelayoutType The specific item to create.
 @param aReportpagesType The item which the created item will be associated to.
 */
- (void)createReportpagelayoutType:(reportpagelayoutType *)aNewReportpagelayoutType forReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Creates a sharedobjectsType item for a reportpagesType item (using sharedobjects navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatesharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key), and the response sharedobjectsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewSharedobjectsType The specific item to create.
 @param aReportpagesType The item which the created item will be associated to.
 */
- (void)createSharedobjectsType:(sharedobjectsType *)aNewSharedobjectsType forReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Creates a reportpagenavType item for a reportpagesType item (using reportpagenav navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportpagenavTypeCompletedNotification for operation completion, along with the reportpagenavType item given as parameter (for kResponseParentItem key), and the response reportpagenavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportpagenavType The specific item to create.
 @param aReportpagesType The item which the created item will be associated to.
 */
- (void)createReportpagenavType:(reportpagenavType *)aNewReportpagenavType forReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Updates a reportpagesType item in the Reportpages.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key), and the response reportpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to update.
 */
- (void)updateReportpagesType:(reportpagesType *)aReportpagesType;

/**
 Deletes a specific reportpagesType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportpagesTypeCompletedNotification for operation completion, along with the reportpagesType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagesType The specific item to delete.
 */
- (void)deleteReportpagesType:(reportpagesType *)aReportpagesType;

#pragma mark - Reportviews methods

/**
 Load the service entity-set Reportviews items, parsed into reportviewsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsCompletedNotification for operation completion, along with the array of reportviewsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportviews;

/**
 Load a specific reportviewsType item, parsed into reportviewsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the response reportviewsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load.
 */
- (void)loadReportviewsType:(reportviewsType *)aReportviewsType;
/**
 Load a specific reportviewsType item, parsed into reportviewsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the response reportviewsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load.
 @param expand Should load the specific item with all its related items (using $expand query parameter)
 */
- (void)loadReportviewsType:(reportviewsType *)aReportviewsType expand:(BOOL)expand;

/**
 Load the reportview navigation items for a specific reportviewsType item, parsed into reportviewType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewForReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the array of the reportviewType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load its reportview navigation items.
 */
- (void)loadReportviewForReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Load the sharedobjects navigation items for a specific reportviewsType item, parsed into sharedobjectsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadSharedobjectsForReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the array of the sharedobjectsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load its sharedobjects navigation items.
 */
- (void)loadSharedobjectsForReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Load the reportviewpages navigation items for a specific reportviewsType item, parsed into reportviewpagesType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewpagesForReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the array of the reportviewpagesType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load its reportviewpages navigation items.
 */
- (void)loadReportviewpagesForReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Load the reportviewwbfav navigation items for a specific reportviewsType item, parsed into reportviewwbfavType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewwbfavForReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the array of the reportviewwbfavType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to load its reportviewwbfav navigation items.
 */
- (void)loadReportviewwbfavForReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Creates a reportviewsType item and add it to the Reportviews.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the response reportviewsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to create.
 */
- (void)createReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Creates a reportviewType item for a reportviewsType item (using reportview navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key), and the response reportviewType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportviewType The specific item to create.
 @param aReportviewsType The item which the created item will be associated to.
 */
- (void)createReportviewType:(reportviewType *)aNewReportviewType forReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Creates a sharedobjectsType item for a reportviewsType item (using sharedobjects navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatesharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key), and the response sharedobjectsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewSharedobjectsType The specific item to create.
 @param aReportviewsType The item which the created item will be associated to.
 */
- (void)createSharedobjectsType:(sharedobjectsType *)aNewSharedobjectsType forReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Creates a reportviewpagesType item for a reportviewsType item (using reportviewpages navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportviewpagesTypeCompletedNotification for operation completion, along with the reportviewpagesType item given as parameter (for kResponseParentItem key), and the response reportviewpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportviewpagesType The specific item to create.
 @param aReportviewsType The item which the created item will be associated to.
 */
- (void)createReportviewpagesType:(reportviewpagesType *)aNewReportviewpagesType forReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Creates a reportviewwbfavType item for a reportviewsType item (using reportviewwbfav navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportviewwbfavTypeCompletedNotification for operation completion, along with the reportviewwbfavType item given as parameter (for kResponseParentItem key), and the response reportviewwbfavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportviewwbfavType The specific item to create.
 @param aReportviewsType The item which the created item will be associated to.
 */
- (void)createReportviewwbfavType:(reportviewwbfavType *)aNewReportviewwbfavType forReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Updates a reportviewsType item in the Reportviews.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key), and the response reportviewsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to update.
 */
- (void)updateReportviewsType:(reportviewsType *)aReportviewsType;

/**
 Deletes a specific reportviewsType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportviewsTypeCompletedNotification for operation completion, along with the reportviewsType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsType The specific item to delete.
 */
- (void)deleteReportviewsType:(reportviewsType *)aReportviewsType;

#pragma mark - Reportpagelayout methods

/**
 Load the service entity-set Reportpagelayout items, parsed into reportpagelayoutType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagelayoutCompletedNotification for operation completion, along with the array of reportpagelayoutType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportpagelayout;

/**
 Load a specific reportpagelayoutType item, parsed into reportpagelayoutType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the response reportpagelayoutType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to load.
 */
- (void)loadReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;
/**
 Load a specific reportpagelayoutType item, parsed into reportpagelayoutType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the response reportpagelayoutType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to load.
 @param expand Should load the specific item with all its related items (using $expand query parameter)
 */
- (void)loadReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType expand:(BOOL)expand;

/**
 Load the reportview navigation items for a specific reportpagelayoutType item, parsed into reportviewType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewForReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the array of the reportviewType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to load its reportview navigation items.
 */
- (void)loadReportviewForReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;

/**
 Creates a reportpagelayoutType item and add it to the Reportpagelayout.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the response reportpagelayoutType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to create.
 */
- (void)createReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;

/**
 Creates a reportviewType item for a reportpagelayoutType item (using reportview navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreatereportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key), and the response reportviewType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewReportviewType The specific item to create.
 @param aReportpagelayoutType The item which the created item will be associated to.
 */
- (void)createReportviewType:(reportviewType *)aNewReportviewType forReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;

/**
 Updates a reportpagelayoutType item in the Reportpagelayout.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key), and the response reportpagelayoutType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to update.
 */
- (void)updateReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;

/**
 Deletes a specific reportpagelayoutType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportpagelayoutTypeCompletedNotification for operation completion, along with the reportpagelayoutType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagelayoutType The specific item to delete.
 */
- (void)deleteReportpagelayoutType:(reportpagelayoutType *)aReportpagelayoutType;

#pragma mark - Reportview methods

/**
 Load the service entity-set Reportview items, parsed into reportviewType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewCompletedNotification for operation completion, along with the array of reportviewType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportview;

/**
 Load a specific reportviewType item, parsed into reportviewType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key), and the response reportviewType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewType The specific item to load.
 */
- (void)loadReportviewType:(reportviewType *)aReportviewType;

/**
 Creates a reportviewType item and add it to the Reportview.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key), and the response reportviewType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewType The specific item to create.
 */
- (void)createReportviewType:(reportviewType *)aReportviewType;

/**
 Updates a reportviewType item in the Reportview.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key), and the response reportviewType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewType The specific item to update.
 */
- (void)updateReportviewType:(reportviewType *)aReportviewType;

/**
 Deletes a specific reportviewType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportviewTypeCompletedNotification for operation completion, along with the reportviewType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewType The specific item to delete.
 */
- (void)deleteReportviewType:(reportviewType *)aReportviewType;

#pragma mark - Report methods

/**
 Load the service entity-set Report items, parsed into reportType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportCompletedNotification for operation completion, along with the array of reportType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReport;

/**
 Load a specific reportType item, parsed into reportType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportTypeCompletedNotification for operation completion, along with the reportType item given as parameter (for kResponseParentItem key), and the response reportType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportType The specific item to load.
 */
- (void)loadReportType:(reportType *)aReportType;

/**
 Creates a reportType item and add it to the Report.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportTypeCompletedNotification for operation completion, along with the reportType item given as parameter (for kResponseParentItem key), and the response reportType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportType The specific item to create.
 */
- (void)createReportType:(reportType *)aReportType;

/**
 Updates a reportType item in the Report.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportTypeCompletedNotification for operation completion, along with the reportType item given as parameter (for kResponseParentItem key), and the response reportType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportType The specific item to update.
 */
- (void)updateReportType:(reportType *)aReportType;

/**
 Deletes a specific reportType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportTypeCompletedNotification for operation completion, along with the reportType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportType The specific item to delete.
 */
- (void)deleteReportType:(reportType *)aReportType;

#pragma mark - Reportqueryconstraints methods

/**
 Load the service entity-set Reportqueryconstraints items, parsed into reportqueryconstraintsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportqueryconstraintsCompletedNotification for operation completion, along with the array of reportqueryconstraintsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportqueryconstraints;

/**
 Load a specific reportqueryconstraintsType item, parsed into reportqueryconstraintsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportqueryconstraintsTypeCompletedNotification for operation completion, along with the reportqueryconstraintsType item given as parameter (for kResponseParentItem key), and the response reportqueryconstraintsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportqueryconstraintsType The specific item to load.
 */
- (void)loadReportqueryconstraintsType:(reportqueryconstraintsType *)aReportqueryconstraintsType;

/**
 Creates a reportqueryconstraintsType item and add it to the Reportqueryconstraints.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportqueryconstraintsTypeCompletedNotification for operation completion, along with the reportqueryconstraintsType item given as parameter (for kResponseParentItem key), and the response reportqueryconstraintsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportqueryconstraintsType The specific item to create.
 */
- (void)createReportqueryconstraintsType:(reportqueryconstraintsType *)aReportqueryconstraintsType;

/**
 Updates a reportqueryconstraintsType item in the Reportqueryconstraints.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportqueryconstraintsTypeCompletedNotification for operation completion, along with the reportqueryconstraintsType item given as parameter (for kResponseParentItem key), and the response reportqueryconstraintsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportqueryconstraintsType The specific item to update.
 */
- (void)updateReportqueryconstraintsType:(reportqueryconstraintsType *)aReportqueryconstraintsType;

/**
 Deletes a specific reportqueryconstraintsType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportqueryconstraintsTypeCompletedNotification for operation completion, along with the reportqueryconstraintsType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportqueryconstraintsType The specific item to delete.
 */
- (void)deleteReportqueryconstraintsType:(reportqueryconstraintsType *)aReportqueryconstraintsType;

#pragma mark - Reportviewsfilter methods

/**
 Load the service entity-set Reportviewsfilter items, parsed into reportviewsfilterType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsfilterCompletedNotification for operation completion, along with the array of reportviewsfilterType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportviewsfilter;

/**
 Load a specific reportviewsfilterType item, parsed into reportviewsfilterType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewsfilterTypeCompletedNotification for operation completion, along with the reportviewsfilterType item given as parameter (for kResponseParentItem key), and the response reportviewsfilterType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsfilterType The specific item to load.
 */
- (void)loadReportviewsfilterType:(reportviewsfilterType *)aReportviewsfilterType;

/**
 Creates a reportviewsfilterType item and add it to the Reportviewsfilter.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportviewsfilterTypeCompletedNotification for operation completion, along with the reportviewsfilterType item given as parameter (for kResponseParentItem key), and the response reportviewsfilterType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsfilterType The specific item to create.
 */
- (void)createReportviewsfilterType:(reportviewsfilterType *)aReportviewsfilterType;

/**
 Updates a reportviewsfilterType item in the Reportviewsfilter.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportviewsfilterTypeCompletedNotification for operation completion, along with the reportviewsfilterType item given as parameter (for kResponseParentItem key), and the response reportviewsfilterType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsfilterType The specific item to update.
 */
- (void)updateReportviewsfilterType:(reportviewsfilterType *)aReportviewsfilterType;

/**
 Deletes a specific reportviewsfilterType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportviewsfilterTypeCompletedNotification for operation completion, along with the reportviewsfilterType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewsfilterType The specific item to delete.
 */
- (void)deleteReportviewsfilterType:(reportviewsfilterType *)aReportviewsfilterType;

#pragma mark - Sharedobjects methods

/**
 Load the service entity-set Sharedobjects items, parsed into sharedobjectsType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadSharedobjectsCompletedNotification for operation completion, along with the array of sharedobjectsType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadSharedobjects;

/**
 Load a specific sharedobjectsType item, parsed into sharedobjectsType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadSharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key), and the response sharedobjectsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aSharedobjectsType The specific item to load.
 */
- (void)loadSharedobjectsType:(sharedobjectsType *)aSharedobjectsType;

/**
 Creates a sharedobjectsType item and add it to the Sharedobjects.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateSharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key), and the response sharedobjectsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aSharedobjectsType The specific item to create.
 */
- (void)createSharedobjectsType:(sharedobjectsType *)aSharedobjectsType;

/**
 Updates a sharedobjectsType item in the Sharedobjects.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateSharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key), and the response sharedobjectsType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aSharedobjectsType The specific item to update.
 */
- (void)updateSharedobjectsType:(sharedobjectsType *)aSharedobjectsType;

/**
 Deletes a specific sharedobjectsType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteSharedobjectsTypeCompletedNotification for operation completion, along with the sharedobjectsType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aSharedobjectsType The specific item to delete.
 */
- (void)deleteSharedobjectsType:(sharedobjectsType *)aSharedobjectsType;

#pragma mark - Reportpagenav methods

/**
 Load the service entity-set Reportpagenav items, parsed into reportpagenavType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagenavCompletedNotification for operation completion, along with the array of reportpagenavType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportpagenav;

/**
 Load a specific reportpagenavType item, parsed into reportpagenavType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportpagenavTypeCompletedNotification for operation completion, along with the reportpagenavType item given as parameter (for kResponseParentItem key), and the response reportpagenavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagenavType The specific item to load.
 */
- (void)loadReportpagenavType:(reportpagenavType *)aReportpagenavType;

/**
 Creates a reportpagenavType item and add it to the Reportpagenav.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportpagenavTypeCompletedNotification for operation completion, along with the reportpagenavType item given as parameter (for kResponseParentItem key), and the response reportpagenavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagenavType The specific item to create.
 */
- (void)createReportpagenavType:(reportpagenavType *)aReportpagenavType;

/**
 Updates a reportpagenavType item in the Reportpagenav.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportpagenavTypeCompletedNotification for operation completion, along with the reportpagenavType item given as parameter (for kResponseParentItem key), and the response reportpagenavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagenavType The specific item to update.
 */
- (void)updateReportpagenavType:(reportpagenavType *)aReportpagenavType;

/**
 Deletes a specific reportpagenavType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportpagenavTypeCompletedNotification for operation completion, along with the reportpagenavType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportpagenavType The specific item to delete.
 */
- (void)deleteReportpagenavType:(reportpagenavType *)aReportpagenavType;

#pragma mark - Reportviewpages methods

/**
 Load the service entity-set Reportviewpages items, parsed into reportviewpagesType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewpagesCompletedNotification for operation completion, along with the array of reportviewpagesType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportviewpages;

/**
 Load a specific reportviewpagesType item, parsed into reportviewpagesType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewpagesTypeCompletedNotification for operation completion, along with the reportviewpagesType item given as parameter (for kResponseParentItem key), and the response reportviewpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewpagesType The specific item to load.
 */
- (void)loadReportviewpagesType:(reportviewpagesType *)aReportviewpagesType;

/**
 Creates a reportviewpagesType item and add it to the Reportviewpages.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportviewpagesTypeCompletedNotification for operation completion, along with the reportviewpagesType item given as parameter (for kResponseParentItem key), and the response reportviewpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewpagesType The specific item to create.
 */
- (void)createReportviewpagesType:(reportviewpagesType *)aReportviewpagesType;

/**
 Updates a reportviewpagesType item in the Reportviewpages.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportviewpagesTypeCompletedNotification for operation completion, along with the reportviewpagesType item given as parameter (for kResponseParentItem key), and the response reportviewpagesType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewpagesType The specific item to update.
 */
- (void)updateReportviewpagesType:(reportviewpagesType *)aReportviewpagesType;

/**
 Deletes a specific reportviewpagesType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportviewpagesTypeCompletedNotification for operation completion, along with the reportviewpagesType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewpagesType The specific item to delete.
 */
- (void)deleteReportviewpagesType:(reportviewpagesType *)aReportviewpagesType;

#pragma mark - Reportviewwbfav methods

/**
 Load the service entity-set Reportviewwbfav items, parsed into reportviewwbfavType objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewwbfavCompletedNotification for operation completion, along with the array of reportviewwbfavType items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadReportviewwbfav;

/**
 Load a specific reportviewwbfavType item, parsed into reportviewwbfavType object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadReportviewwbfavTypeCompletedNotification for operation completion, along with the reportviewwbfavType item given as parameter (for kResponseParentItem key), and the response reportviewwbfavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewwbfavType The specific item to load.
 */
- (void)loadReportviewwbfavType:(reportviewwbfavType *)aReportviewwbfavType;

/**
 Creates a reportviewwbfavType item and add it to the Reportviewwbfav.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateReportviewwbfavTypeCompletedNotification for operation completion, along with the reportviewwbfavType item given as parameter (for kResponseParentItem key), and the response reportviewwbfavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewwbfavType The specific item to create.
 */
- (void)createReportviewwbfavType:(reportviewwbfavType *)aReportviewwbfavType;

/**
 Updates a reportviewwbfavType item in the Reportviewwbfav.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateReportviewwbfavTypeCompletedNotification for operation completion, along with the reportviewwbfavType item given as parameter (for kResponseParentItem key), and the response reportviewwbfavType item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewwbfavType The specific item to update.
 */
- (void)updateReportviewwbfavType:(reportviewwbfavType *)aReportviewwbfavType;

/**
 Deletes a specific reportviewwbfavType item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteReportviewwbfavTypeCompletedNotification for operation completion, along with the reportviewwbfavType item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aReportviewwbfavType The specific item to delete.
 */
- (void)deleteReportviewwbfavType:(reportviewwbfavType *)aReportviewwbfavType;

#pragma mark - Function Import methods



@end
